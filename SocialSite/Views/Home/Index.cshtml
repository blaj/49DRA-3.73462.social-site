@model SocialSite.Dto.Home.IndexViewModel

@{
    ViewData["Title"] = "Strona główna";
}

<div class="row mt-3">
    <div class="col-md-3">
        <div class="card">
            <div class="card-body">
                <div class="h5">
                    <a asp-controller="User" asp-action="Details" asp-route-id="@Model.ApplicationUser.Id">
                        @Model.ApplicationUser.FirstName @Model.ApplicationUser.LastName
                    </a>
                </div>
            </div>
            <ul class="list-group list-group-flush">
                <li class="list-group-item">
                    <div class="h6 text-muted">Znajomych</div>
                    <div class="h5">@(Model.ApplicationUser.Friends.Count + Model.ApplicationUser.FriendOf.Count)</div>
                </li>
                <li class="list-group-item">
                    <div class="h6 text-muted">Postów</div>
                    <div class="h5">@Model.ApplicationUser.Posts.Count</div>
                </li>
                <li class="list-group-item">
                    <div class="h6 text-muted">Komentarzy</div>
                    <div class="h5">@Model.Comments.Count</div>
                </li>
            </ul>
        </div>
    </div>

    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <ul class="nav nav-tabs card-header-tabs" id="postTab" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link active" id="posts-tab" data-toggle="tab" href="#posts" role="tab" aria-controls="posts" aria-selected="true">
                            Dodaj post
                        </a>
                    </li>
                </ul>
            </div>

            <div class="card-body">
                <form asp-controller="Post" asp-action="Create" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    <div class="form-group">
                        <label asp-for="PostCreateRequest.Title" class="control-label"></label>
                        <input asp-for="PostCreateRequest.Title" class="form-control" />
                        <span asp-validation-for="PostCreateRequest.Title" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="PostCreateRequest.Content" class="control-label"></label>
                        <textarea asp-for="PostCreateRequest.Content" class="form-control"></textarea>
                        <span asp-validation-for="PostCreateRequest.Content" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <button class="btn btn-primary" type="submit">Dodaj post</button>
                    </div>
                </form>
            </div>
        </div>

        @foreach (var post in Model.Posts)
        {
            <div class="card mt-3">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="mr-2">
                                <img class="rounded-circle" width="45" src="https://picsum.photos/50/50" alt="">
                            </div>
                            <div class="ml-2">
                                <div class="h5 m-0">
                                    <a asp-controller="User" asp-action="Details" asp-route-id="@post.ApplicationUser.Id">
                                        @post.ApplicationUser.FirstName @post.ApplicationUser.LastName
                                    </a>
                                </div>
                                <div class="h7 text-muted">@post.CreatedOn</div>
                            </div>
                        </div>

                        @if (post.ApplicationUser.UserName == User.Identity.Name)
                        {
                            <div>
                                <div class="dropdown">
                                    <button class="btn btn-link dropdown-toggle" type="button" id="gedf-drop1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <i class="fa fa-ellipsis-h"></i>
                                    </button>
                                    <div class="dropdown-menu dropdown-menu-right" aria-labelledby="gedf-drop1">
                                        <div class="h6 dropdown-header">Co chcesz zrobić?</div>
                                        <a class="dropdown-item" asp-controller="Post" asp-action="Edit" asp-route-id="@post.Id">Edytuj</a>
                                        <a class="dropdown-item" asp-controller="Post" asp-action="Delete" asp-route-id="@post.Id">Usuń</a>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>

                </div>
                <div class="card-body">
                    <div class="text-muted h7 mb-2"> <i class="fa fa-clock-o"></i>10 min ago</div>
                    <a class="card-link" href="#">
                        <h5 class="card-title">@post.Title</h5>
                    </a>

                    <p class="card-text">@post.Content</p>
                </div>
                <div class="card-footer">
                    <div class="row px-4 pb-4">
                        <a href="#" class="card-link"><i class="fa fa-gittip"></i> Daj like</a>
                        <a href="#" class="card-link"><i class="fa fa-comment"></i> Skomentuj</a>
                    </div>

                    @foreach (var comment in post.Comments)
                    {
                        <div class="row">
                            <div class="col-auto">
                                <img src="//placehold.it/50" class="img-fluid" alt="">
                            </div>
                            <div class="col">
                                <div class="card-block">
                                    <h4 class="h5">
                                        @comment.ApplicationUser.FirstName @comment.ApplicationUser.LastName

                                        @if (comment.ApplicationUser.UserName == User.Identity.Name)
                                        {
                                            <a class="h6" asp-controller="Comment" asp-action="Delete" asp-route-id="@comment.Id">
                                                Usuń
                                            </a>
                                        }
                                    </h4>
                                    <p class="">@comment.Content</p>
                                </div>
                            </div>
                        </div>
                    }

                    <div class="row">
                        <div class="col-md-12">
                            <form asp-controller="Comment" asp-action="Create" method="post">
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                                <input type="hidden" asp-for="CommentCreateRequest.PostId" value="@post.Id" />

                                <div class="form-group">
                                    <textarea asp-for="CommentCreateRequest.Content" class="form-control"></textarea>
                                    <span asp-validation-for="CommentCreateRequest.Content" class="text-danger"></span>
                                </div>

                                <div class="form-group">
                                    <button class="btn btn-primary" type="submit">Skomentuj</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="col-md-3">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Aktywni znajomi</h5>
                <h6 class="card-subtitle mb-2 text-muted">Poniżej znajduje się lista aktywnych znajomych</h6>
                <ul class="list-group" id="friendContainer">
                    @foreach (var activeFriend in Model.ActiveFriends)
                    {
                        <li class="list-group-item">
                            <a href="#" class="friend" data-id="@activeFriend.Id" data-name="@activeFriend.FirstName @activeFriend.LastName">
                                @activeFriend.FirstName @activeFriend.LastName

                                @if (activeFriend.ActivityType.ToString().Equals("ONLINE"))
                                {
                                    <span class="badge badge-success">OnLine</span>
                                }

                                @if (activeFriend.ActivityType.ToString().Equals("AWAY"))
                                {
                                    <span class="badge badge-warning">Zaraz wracam</span>
                                }

                                @if (activeFriend.ActivityType.ToString().Equals("OFFLINE"))
                                {
                                    <span class="badge badge-secondary">OffLine</span>
                                }
                            </a>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>
</div>

<div class="fixed-bottom">
    <div class="d-none" id="messageContainer">
        <div class="row">
            <div class="col-3">
                <div class="card">
                    <div class="card-header">
                        <span id="messageName"></span>

                        <a href="#" id="closeMessage">Zamknij</a>
                    </div>

                    <div class="card-body" id="messages" style="max-height: 200px; overflow-y: scroll;"></div>

                    <div class="card-footer">
                        <form asp-controller="Message" asp-action="SendMessage" id="messageForm">
                            <div class="input-group">
                                <input id="recipientUserId" type="hidden" name="recipientUserId" value="" />
                                <textarea id="messageContent" name="content" class="form-control custom-control" rows="3" style="resize:none"></textarea>
                                <button type="submit" id="sendMessageButton" class="input-group-addon btn btn-success">Wyślij</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(function () {
            setInterval(function () {
                if ($('#messageContainer').hasClass('d-block')) {
                    getMessages($('#recipientUserId').val());
                }
            }, 5000);

            $(document).on('click', '#closeMessage', function () {
                const messageContainer = $('#messageContainer');

                messageContainer.addClass('d-none')
                messageContainer.removeClass('d-block');
            });

            $(document).on('click', '#sendMessageButton', function (e) {
                e.preventDefault();

                $.post('/Message/SendMessage', $('#messageForm').serialize(), function (response) {
                    $('#messageContent').empty();
                    setTimeout(function () { getMessages($('#recipientUserId').val()); }, 1000);
                });
            });

            $('#friendContainer').on('click', '.friend', function () {
                const friendId = $(this).data('id');
                const friendName = $(this).data('name');

                const messageContainer = $('#messageContainer');
                const messageName = $('#messageName');

                messageContainer.removeClass('d-none')
                messageContainer.addClass('d-block');

                messageName.empty();
                messageName.text(friendName);

                $('#recipientUserId').val(friendId);
                $('#messageContent').val('');

                getMessages(friendId);
            });

            function getMessages(friendId) {
                const messages = $('#messages');
                messages.empty();

                $.getJSON('/Message/GetMessages/' + friendId, function (messagePayload) {
                    $(messagePayload).each(function (i, item) {
                        const content = ''
                            + '<div class="card mb-2">'
                            + ' <div class="card-body">'
                            + '   <h6 class="card-title">'
                            +       item.userName
                            + '   </h6>'
                            + '   <p class="card-text">'
                            +       item.content
                            + '   </p>'
                            + ' </div>'
                            + '</div>';

                        messages.append(content);
                    });
                });
            };
        });
    </script>
}